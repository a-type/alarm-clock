{"version":3,"sources":["TimeSelect.tsx","PlaylistSelect.tsx","Alarms.tsx","theme/colors.ts","theme/shadows.ts","theme/theme.ts","Settings.tsx","ApiError.ts","App.tsx","serviceWorker.js","index.tsx"],"names":["useStyles","makeStyles","theme","root","width","display","gridTemplateAreas","gridTemplateColumns","clearButton","fontSize","margin","useInputStyles","TimeSelect","value","onChange","className","classes","inputClasses","hour","minute","Box","clsx","TextField","select","variant","label","ev","parseInt","target","fullWidth","InputProps","style","gridArea","Array","fill","map","_","hr","MenuItem","key","toString","i","min","padStart","IconButton","onClick","DeleteTwoTone","PlaylistSelect","props","useSWR","shouldRetryOnError","playlistData","data","isValidating","error","Typography","disabled","playlists","playlist","id","name","DAYS","timeSelect","dayHeading","textTransform","useTabStyles","selected","fontWeight","tomorrow","Date","getDay","Alarms","alarms","tabClasses","useState","activeDayIndex","setActiveDayIndex","changeHandler","day","newValue","playlistChangeHandler","playlistId","height","flexDirection","Tabs","_ev","val","index","Tab","toUpperCase","aria-controls","axis","onChangeIndex","flex","containerStyle","slideStyle","alignItems","role","hidden","aria-labelledby","gutterBottom","justifyContent","p","Button","c","length","white","black","blackRgb","bright","dark","medium","mediumRgb","trueBlack","trueBlackRgb","generateShadows","lightColorRgb","colors","darkColorRgb","idx","baseDarkPalette","type","text","primary","main","secondary","background","default","paper","baseLightPalette","createMuiTheme","palette","lightPalette","breakpoints","darkPalette","headingSettings","fontFamily","themeFactory","shadows","shape","typography","h1","h2","h3","h4","h5","body1","body2","overrides","MuiAppBar","colorDefault","backgroundColor","MuiButton","MuiTypography","down","MuiTextField","color","MuiLink","underline","darkTheme","timeZones","Settings","timeAdjustment","onTimeAdjustmentChanged","spotifyUserData","loadingSpotify","intVal","isNaN","zone","CircularProgress","user","my","display_name","component","Link","href","ApiError","message","response","Error","container","App","useSwr","settings","mutate","saving","setSaving","settingChangeHandler","settingKey","a","fetch","method","headers","body","JSON","stringify","ok","json","alert","activeTab","setActiveTab","Container","Fade","in","position","top","left","right","transitionDelay","unmountOnExit","LinearProgress","v","icon","AlarmTwoTone","SettingsTwoTone","marginTop","swrConfig","fetcher","then","res","ThemeProvider","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.c1832fe9.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Box,\n  TextField,\n  MenuItem,\n  IconButton,\n  makeStyles,\n} from '@material-ui/core';\nimport { DeleteTwoTone } from '@material-ui/icons';\nimport clsx from 'clsx';\nimport { ChangeEvent } from 'react';\nimport { AlarmConfig } from './types';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    display: 'grid',\n    gridTemplateAreas: '\"hour minute right\"',\n    gridTemplateColumns: '2fr 2fr 1fr',\n  },\n  clearButton: {\n    fontSize: '8vmin',\n    margin: 'auto',\n  },\n}));\n\nconst useInputStyles = makeStyles((theme) => ({\n  root: {\n    fontSize: '10vmin',\n  },\n}));\n\ntype TimeSelectProps = {\n  value: Pick<AlarmConfig, 'hour' | 'minute'>;\n  onChange: (newValue: Pick<AlarmConfig, 'hour' | 'minute'>) => void;\n  className?: string;\n};\n\nexport function TimeSelect({ value, onChange, className }: TimeSelectProps) {\n  const classes = useStyles({});\n  const inputClasses = useInputStyles({});\n\n  const hour = value && value.hour;\n  const minute = value && value.minute;\n\n  const handleHourChange = (ev: ChangeEvent<any>) => {\n    if (minute === null) return;\n    onChange({\n      hour: parseInt(ev.target.value),\n      minute,\n    });\n  };\n\n  const handleMinuteChange = (ev: ChangeEvent<any>) => {\n    if (hour === null) return;\n    onChange({\n      hour,\n      minute: parseInt(ev.target.value),\n    });\n  };\n\n  const clear = () => {\n    onChange({\n      hour: null,\n      minute: null,\n    });\n  };\n\n  return (\n    <Box className={clsx(classes.root, className)}>\n      <TextField\n        select\n        variant=\"filled\"\n        label=\"Hour\"\n        value={hour}\n        onChange={handleHourChange}\n        fullWidth\n        InputProps={{\n          classes: inputClasses,\n        }}\n        style={{ gridArea: 'hour' }}\n      >\n        {new Array(24).fill(null).map((_, hr) => (\n          <MenuItem key={hr} value={hr.toString()}>\n            {hr}\n          </MenuItem>\n        ))}\n      </TextField>\n      <TextField\n        select\n        variant=\"filled\"\n        label=\"Min\"\n        value={minute}\n        onChange={handleMinuteChange}\n        fullWidth\n        InputProps={{\n          classes: inputClasses,\n        }}\n        style={{ gridArea: 'minute' }}\n      >\n        {new Array(12)\n          .fill(null)\n          .map((_, i) => i * 5)\n          .map((min) => (\n            <MenuItem key={min} value={min.toString()}>\n              {min.toString().padStart(2, '0')}\n            </MenuItem>\n          ))}\n      </TextField>\n      {hour !== null && minute !== null && (\n        <IconButton\n          onClick={clear}\n          className={classes.clearButton}\n          style={{ gridArea: 'right' }}\n        >\n          <DeleteTwoTone fontSize=\"inherit\" />\n        </IconButton>\n      )}\n    </Box>\n  );\n}\n","import * as React from 'react';\nimport {\n  makeStyles,\n  Theme,\n  Typography,\n  TextField,\n  MenuItem,\n} from '@material-ui/core';\nimport useSWR from 'swr';\n\nexport type PlaylistSelectProps = {\n  value: string | null;\n  onChange: (newId: string | null) => void;\n};\n\nconst useStyles = makeStyles<Theme, PlaylistSelectProps>((theme) => ({}));\n\ntype PlaylistsResponse = {\n  playlists: {\n    id: string;\n    images: any[];\n    name: string;\n  }[];\n};\n\nexport function PlaylistSelect(props: PlaylistSelectProps) {\n  const classes = useStyles(props);\n  const { value, onChange } = props;\n\n  const { data: playlistData, isValidating, error: playlistError } = useSWR<\n    PlaylistsResponse\n  >('/api/spotify/playlists', {\n    shouldRetryOnError: false,\n  });\n\n  if (playlistError) {\n    return (\n      <Typography variant=\"caption\">\n        Connect Spotify to choose a playlist\n      </Typography>\n    );\n  }\n\n  return (\n    <TextField\n      label=\"Playlist\"\n      select\n      disabled={!playlistData || isValidating}\n      value={value || null}\n      onChange={(ev) => onChange(ev.target.value)}\n      fullWidth\n      margin=\"normal\"\n    >\n      {(playlistData?.playlists ?? []).map((playlist) => (\n        <MenuItem value={playlist.id} key={playlist.id}>\n          {playlist.name}\n        </MenuItem>\n      ))}\n    </TextField>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Grid,\n  Box,\n  Typography,\n  makeStyles,\n  Tabs,\n  Tab,\n  Button,\n} from '@material-ui/core';\nimport { TimeSelect } from './TimeSelect';\nimport SwipeableViews from 'react-swipeable-views';\nimport { AlarmConfig } from './types';\nimport { PlaylistSelect } from './PlaylistSelect';\n\nconst DAYS = [\n  'sunday',\n  'monday',\n  'tuesday',\n  'wednesday',\n  'thursday',\n  'friday',\n  'saturday',\n] as const;\n\nconst useStyles = makeStyles((theme) => ({\n  timeSelect: {},\n  dayHeading: {\n    textTransform: 'capitalize',\n  },\n}));\n\nconst useTabStyles = makeStyles((theme) => ({\n  root: {},\n  selected: {\n    fontWeight: 'bold',\n  },\n}));\n\nconst tomorrow = new Date().getDay() + 1;\n\ntype AlarmsProps = {\n  alarms: Record<string, AlarmConfig>;\n  onChange: (newValue: Record<string, AlarmConfig>) => void;\n};\n\nexport function Alarms({ alarms = {}, onChange }: AlarmsProps) {\n  const classes = useStyles({});\n  const tabClasses = useTabStyles({});\n\n  const [activeDayIndex, setActiveDayIndex] = useState(tomorrow);\n\n  const changeHandler = (day: string) => (newValue: {\n    hour: number | null;\n    minute: number | null;\n  }) => {\n    onChange({\n      ...alarms,\n      [day]: {\n        ...alarms[day],\n        ...newValue,\n      },\n    });\n  };\n\n  const playlistChangeHandler = (day: string) => (\n    playlistId: string | null,\n  ) => {\n    onChange({\n      ...alarms,\n      [day]: {\n        ...alarms[day],\n        playlistId,\n      },\n    });\n  };\n\n  return (\n    <Box width=\"100%\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\n      <Tabs\n        value={activeDayIndex}\n        onChange={(_ev, val) => setActiveDayIndex(val)}\n      >\n        {DAYS.map((day, index) => (\n          <Tab\n            label={day[0].toUpperCase()}\n            key={day}\n            id={`tab-${index}`}\n            aria-controls={`tabpanel-${index}`}\n            classes={tabClasses}\n          />\n        ))}\n      </Tabs>\n      <SwipeableViews\n        axis=\"x\"\n        index={activeDayIndex}\n        onChangeIndex={setActiveDayIndex}\n        style={{ flex: 1 }}\n        containerStyle={{\n          height: '100%',\n        }}\n        slideStyle={{\n          height: '100%',\n        }}\n      >\n        {DAYS.map((day, index) => (\n          <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            alignItems=\"flex-start\"\n            role=\"tabpanel\"\n            hidden={index !== activeDayIndex}\n            id={`tabpanel-${index}`}\n            aria-labelledby={`tab-${index}`}\n            key={day}\n            height=\"100%\"\n          >\n            {activeDayIndex === index && (\n              <>\n                <Typography\n                  variant=\"h5\"\n                  gutterBottom\n                  className={classes.dayHeading}\n                >\n                  {day}\n                </Typography>\n                <Box flex={1} width=\"100%\">\n                  <TimeSelect\n                    value={alarms[day] || null}\n                    onChange={changeHandler(day)}\n                    className={classes.timeSelect}\n                  />\n                  <PlaylistSelect\n                    value={alarms[day].playlistId}\n                    onChange={playlistChangeHandler(day)}\n                  />\n                </Box>\n              </>\n            )}\n          </Box>\n        ))}\n      </SwipeableViews>\n      <Box\n        display=\"flex\"\n        width=\"100%\"\n        flexDirection=\"row\"\n        justifyContent=\"space-between\"\n        p={2}\n      >\n        <Button\n          onClick={() =>\n            setActiveDayIndex((c) => (c === 0 ? DAYS.length - 1 : c - 1))\n          }\n        >\n          Prev\n        </Button>\n        <Button onClick={() => setActiveDayIndex((c) => (c + 1) % DAYS.length)}>\n          Next\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n","export default {\n  white: '#fff',\n  black: '#171515',\n  blackRgb: [42, 36, 56],\n  bright: '#E6E5E7',\n  dark: '#292528',\n  medium: '#3A3E3B',\n  mediumRgb: [53, 47, 68],\n  trueBlack: '#040408',\n  trueBlackRgb: [4, 4, 8],\n};\n","import colors from './colors';\n\ntype Shadows = [\n  'none',\n  string,\n  string,\n  string,\n  string,\n  string,\n  string,\n  string,\n  string,\n  string,\n  string,\n  string,\n  string,\n  string,\n  string,\n  string,\n  string,\n  string,\n  string,\n  string,\n  string,\n  string,\n  string,\n  string,\n  string,\n];\n\nexport const generateShadows = (\n  lightColorRgb: number[] = colors.mediumRgb,\n  darkColorRgb: number[] = colors.blackRgb,\n): Shadows =>\n  new Array(25).fill(null).map((_, idx) => {\n    if (idx === 0) return 'none';\n    return `0 ${idx * 5}px ${idx * 10}px rgba(${darkColorRgb[0]}, ${\n      darkColorRgb[1]\n    }, ${darkColorRgb[2]}, 0.025), 0 ${idx * 15}px ${idx * 40}px rgba(${\n      lightColorRgb[0]\n    }, ${lightColorRgb[1]}, ${lightColorRgb[2]}, 0.2)`;\n  }) as Shadows;\n","import { createMuiTheme } from '@material-ui/core';\nimport { ThemeOptions } from '@material-ui/core/styles/createMuiTheme';\nimport colors from './colors';\nimport { generateShadows } from './shadows';\n\nconst baseDarkPalette: ThemeOptions['palette'] = {\n  type: 'dark',\n  text: {\n    primary: colors.white,\n  },\n  primary: {\n    main: colors.bright,\n  },\n  secondary: {\n    main: colors.dark,\n  },\n  background: {\n    default: colors.black,\n    paper: colors.dark,\n  },\n};\nconst baseLightPalette: ThemeOptions['palette'] = {\n  type: 'light',\n  text: {\n    primary: colors.black,\n  },\n  primary: {\n    main: colors.black,\n  },\n  secondary: {\n    main: colors.medium,\n  },\n  background: {\n    default: colors.bright,\n    paper: colors.white,\n  },\n};\n\nconst { palette: lightPalette, breakpoints } = createMuiTheme({\n  palette: baseLightPalette,\n});\nconst { palette: darkPalette } = createMuiTheme({ palette: baseDarkPalette });\n\nconst headingSettings = {\n  fontFamily: '\"EB Garamond\", serif',\n};\n\nconst themeFactory = (\n  palette: ThemeOptions['palette'],\n  shadows: ThemeOptions['shadows'],\n) =>\n  createMuiTheme({\n    palette,\n    shape: {},\n    shadows,\n    typography: {\n      fontFamily: 'Montserrat, sans-serif',\n      fontSize: 16,\n      h1: headingSettings,\n      h2: headingSettings,\n      h3: headingSettings,\n      h4: headingSettings,\n      h5: headingSettings,\n      body1: {\n        fontFamily: 'Montserrat, sans-serif',\n      },\n      body2: {\n        fontFamily: 'Montserrat, sans-serif',\n      },\n    },\n    overrides: {\n      MuiAppBar: {\n        colorDefault: {\n          backgroundColor: 'transparent',\n        },\n      },\n      MuiButton: {\n        root: {\n          textTransform: 'capitalize',\n        },\n      },\n      MuiTypography: {\n        h1: {\n          [breakpoints.down('sm')]: {\n            fontSize: '5vmax',\n          },\n        },\n        h2: {\n          [breakpoints.down('sm')]: {\n            fontSize: '4vmax',\n          },\n        },\n        h3: {\n          [breakpoints.down('sm')]: {\n            fontSize: '3.75vmax',\n          },\n        },\n        h4: {\n          [breakpoints.down('sm')]: {\n            fontSize: '3.3vmax',\n          },\n        },\n      },\n    },\n    props: {\n      MuiTextField: {\n        variant: 'outlined',\n      },\n      MuiButton: {\n        color: 'primary',\n      },\n      MuiLink: {\n        underline: 'always',\n      },\n    },\n  });\n\nexport const lightTheme = themeFactory(lightPalette, generateShadows());\nexport const darkTheme = themeFactory(\n  darkPalette,\n  generateShadows(colors.blackRgb, colors.trueBlackRgb),\n);\n","import * as React from 'react';\nimport {\n  makeStyles,\n  Theme,\n  Box,\n  TextField,\n  MenuItem,\n  Button,\n  Link,\n  CircularProgress,\n  Typography,\n} from '@material-ui/core';\nimport useSWR from 'swr';\n\nexport type SettingsProps = {\n  timeAdjustment: { hour: number; minute: number };\n  onTimeAdjustmentChanged: (newValue: { hour: number; minute: number }) => void;\n};\n\nconst useStyles = makeStyles<Theme, SettingsProps>((theme) => ({}));\n\nconst timeZones = [\n  -11,\n  -10,\n  -9,\n  -8,\n  -7,\n  -6,\n  -5,\n  -4,\n  -3,\n  -2,\n  -1,\n  0,\n  1,\n  2,\n  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9,\n  10,\n  11,\n  12,\n  13,\n  14,\n];\n\nexport function Settings(props: SettingsProps) {\n  const classes = useStyles(props);\n  const { timeAdjustment, onTimeAdjustmentChanged } = props;\n\n  const { data: spotifyUserData, isValidating: loadingSpotify } = useSWR(\n    '/api/spotify/user',\n  );\n\n  const changeTimeZone = (ev: React.ChangeEvent<any>) => {\n    const intVal = parseInt(ev.target.value);\n    if (isNaN(intVal)) return;\n\n    onTimeAdjustmentChanged({\n      ...timeAdjustment,\n      hour: intVal,\n    });\n  };\n\n  return (\n    <Box>\n      <TextField\n        select\n        label=\"Time zone\"\n        value={timeAdjustment.hour.toString()}\n        onChange={changeTimeZone}\n        fullWidth\n        margin=\"normal\"\n      >\n        {timeZones.map((zone) => (\n          <MenuItem value={zone.toString()}>\n            UTC {zone === 0 ? '' : zone < 0 ? zone : `+${zone}`}\n          </MenuItem>\n        ))}\n      </TextField>\n      {loadingSpotify ? (\n        <CircularProgress />\n      ) : spotifyUserData?.user ? (\n        <Box my={1}>\n          <Typography>\n            Connected to Spotify as {spotifyUserData.user.display_name}\n          </Typography>\n        </Box>\n      ) : (\n        <Button\n          variant=\"contained\"\n          component={Link as any}\n          underline=\"never\"\n          href=\"/spotifyLogin\"\n        >\n          Connect Spotify\n        </Button>\n      )}\n    </Box>\n  );\n}\n","export class ApiError extends Error {\n  response: Response;\n\n  constructor(message: string, response: Response) {\n    super(message);\n    this.response = response;\n  }\n}\n","import React, { useState } from 'react';\nimport useSwr, { SWRConfig } from 'swr';\nimport { Alarms } from './Alarms';\nimport {\n  Container,\n  makeStyles,\n  Tabs,\n  Tab,\n  Box,\n  CircularProgress,\n  Typography,\n  ThemeProvider,\n  CssBaseline,\n  LinearProgress,\n  Fade,\n} from '@material-ui/core';\nimport { AlarmTwoTone, SettingsTwoTone } from '@material-ui/icons';\nimport { AlarmConfig, Settings } from './types';\nimport { darkTheme } from './theme/theme';\nimport { Settings as SettingsUI } from './Settings';\nimport { ApiError } from './ApiError';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    height: '100%',\n  },\n}));\n\nfunction App() {\n  const classes = useStyles({});\n  const { data: settings, mutate } = useSwr<Settings>('/api/settings');\n\n  const [saving, setSaving] = useState(false);\n\n  const settingChangeHandler = <T extends keyof Settings>(\n    settingKey: T,\n  ) => async (val: Settings[T]) => {\n    try {\n      setSaving(true);\n      const response = await fetch('/api/settings', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          ...settings,\n          [settingKey]: val,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Settings update failed');\n      }\n\n      const json = await response.json();\n      mutate(json);\n    } catch (err) {\n      alert(err.message);\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const [activeTab, setActiveTab] = useState(0);\n\n  if (!settings) {\n    return (\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        p={4}\n      >\n        <CircularProgress />\n        <Typography variant=\"caption\" style={{ marginTop: 16 }}>\n          Connecting to clock\n        </Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Container className={classes.container}>\n      <Fade\n        in={saving}\n        style={{\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          transitionDelay: '800ms',\n        }}\n        unmountOnExit\n      >\n        <LinearProgress />\n      </Fade>\n      <Tabs\n        value={activeTab}\n        onChange={(_, v) => setActiveTab(v)}\n        variant=\"fullWidth\"\n      >\n        <Tab\n          icon={<AlarmTwoTone />}\n          label=\"Alarms\"\n          id=\"tab-alarms\"\n          aria-controls=\"tabpanel-alarms\"\n        />\n        <Tab\n          icon={<SettingsTwoTone />}\n          label=\"Settings\"\n          id=\"tab-settings\"\n          aria-controls=\"tabpanel-settings\"\n        />\n      </Tabs>\n      <Box\n        id={`tabpanel-alarms`}\n        role=\"tabpanel\"\n        hidden={activeTab !== 0}\n        aria-labelledby=\"tab-alarms\"\n        width=\"100%\"\n        flex={1}\n      >\n        <Alarms\n          alarms={settings.alarms}\n          onChange={settingChangeHandler('alarms')}\n        />\n      </Box>\n      <Box\n        id=\"tabpanel-settings\"\n        role=\"tabpanel\"\n        hidden={activeTab !== 1}\n        aria-labelledby=\"tab-settings\"\n        width=\"100%\"\n        flex={1}\n      >\n        <SettingsUI\n          timeAdjustment={settings.timeAdjustment}\n          onTimeAdjustmentChanged={settingChangeHandler('timeAdjustment')}\n        />\n      </Box>\n    </Container>\n  );\n}\n\nconst swrConfig = {\n  fetcher: (...args: [any, any]) =>\n    fetch(...args).then((res) => {\n      if (!res.ok) {\n        const error = new ApiError('Request failed', res);\n        throw error;\n      }\n      return res.json();\n    }),\n};\n\nexport default function () {\n  return (\n    <SWRConfig value={swrConfig}>\n      <ThemeProvider theme={darkTheme}>\n        <App />\n        <CssBaseline />\n      </ThemeProvider>\n    </SWRConfig>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}